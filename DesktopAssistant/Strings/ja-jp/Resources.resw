<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>俺の仕事用のPCにバーチャルアシスタントがやってきた件。～AIが優秀過ぎてアイツ無しでは仕事が進められなくなったがもう遅い～</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>仕事</value>
  </data>
  <data name="Shell_Main.Content" xml:space="preserve">
    <value>メイン</value>
  </data>
  <data name="Shell_Welcome.Content" xml:space="preserve">
    <value>未定♪</value>
  </data>
  <data name="Shell_Personal.Content" xml:space="preserve">
    <value>キャラ選択</value>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>表示設定</value>
  </data>
  <data name="Settings_Theme.Header" xml:space="preserve">
    <value>テーマ選択</value>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>ライトテーマ</value>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>ダークテーマ</value>
    <comment>".Content"を持つRadioButtonに適用するので、".Content"を付ける</comment>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>このソフトウェアについて</value>
    <comment>".Text"を持つTextBlockに適用するので、".Text"を付ける</comment>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>デスクトップにマスコットキャラクターを表示し、あなたの仕事をサポートします。</value>
  </data>
  <data name="SettingsPage_PrivacyTermsLink.Content" xml:space="preserve">
    <value>作者の巣窟</value>
  </data>
  <data name="SettingsPage_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://YourPrivacyUrlGoesHere/</value>
  </data>
  <data name="Shell_CharacterSettings.Content" xml:space="preserve">
    <value>キャラ作成</value>
  </data>
  <data name="Settings_Api.Text" xml:space="preserve">
    <value>生成AIのAPI設定</value>
  </data>
  <data name="Settings_Api_ApiKey.Text" xml:space="preserve">
    <value>APIキー</value>
  </data>
  <data name="Settings_Api_AzureOpenAI.Content" xml:space="preserve">
    <value>Azure OpenAI Service</value>
  </data>
  <data name="Settings_Api_AzureOpenAI_Endpoint.Text" xml:space="preserve">
    <value>エンドポイント</value>
  </data>
  <data name="Settings_Api_Model.Text" xml:space="preserve">
    <value>モデル名</value>
  </data>
  <data name="Settings_Api_Service_OpenAI.Content" xml:space="preserve">
    <value>OpenAI (ChatGPT)</value>
  </data>
  <data name="Button_Save.Text" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Saved.Message" xml:space="preserve">
    <value>変更しました。</value>
  </data>
  <data name="Button_ApiTest.Text" xml:space="preserve">
    <value>APIテスト</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>こんにちは。</value>
  </data>
  <data name="Settings_Theme.Description" xml:space="preserve">
    <value>ライトテーマかダークテーマを選択します。</value>
  </data>
  <data name="Settings_ApiTest.Description" xml:space="preserve">
    <value>この設定でAIが利用できることを確認します。</value>
  </data>
  <data name="Settings_ApiTest.Header" xml:space="preserve">
    <value>APIの実行テスト</value>
  </data>
  <data name="Settings_Api_Service.Description" xml:space="preserve">
    <value>生成AIサービスを選択します。</value>
  </data>
  <data name="Settings_Api_Service.Header" xml:space="preserve">
    <value>生成AIサービスの選択</value>
  </data>
  <data name="Settings_Api_Top.Description" xml:space="preserve">
    <value>生成AIを利用するための設定を行います。入力した設定は保存ボタンをクリックするまで反映されません。</value>
  </data>
  <data name="Settings_Api_Top.Header" xml:space="preserve">
    <value>生成AIのAPI設定</value>
  </data>
  <data name="Settings_AzureOpenAI.Description" xml:space="preserve">
    <value>Azureの場合、Azure OpenAI Studioから必要な設定情報を取得してください。</value>
  </data>
  <data name="Settings_AzureOpenAI.Header" xml:space="preserve">
    <value>Azure OpenAI Service</value>
  </data>
  <data name="Settings_OpenAI.Description" xml:space="preserve">
    <value>OpenAIでアカウントを作成して、APIキーを取得してください。</value>
  </data>
  <data name="Settings_OpenAI.Header" xml:space="preserve">
    <value>OpenAI (ChatGPT)</value>
  </data>
  <data name="ToDoList" xml:space="preserve">
    <value>ToDoリスト</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Button_Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Button_NoRegrets" xml:space="preserve">
    <value>後悔しない</value>
  </data>
  <data name="Dialog_Content1.Text" xml:space="preserve">
    <value>カテゴリ内のタスクも全て削除されます。</value>
  </data>
  <data name="Dialog_Content2.Text" xml:space="preserve">
    <value>削除したデータを元に戻すことはできません。</value>
  </data>
  <data name="Message_ConfirmDelete1" xml:space="preserve">
    <value>本当に削除するのですか？</value>
  </data>
  <data name="Message_ConfirmDelete2" xml:space="preserve">
    <value>後悔しませんね？</value>
  </data>
  <data name="Message_DeleteCategory" xml:space="preserve">
    <value>カテゴリを削除しますか？</value>
  </data>
  <data name="Button_Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="Menu_Delete.Text" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Menu_Edit.Text" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="Button_AddCategory.Content" xml:space="preserve">
    <value>カテゴリの追加</value>
  </data>
  <data name="Button_AllTasks.Content" xml:space="preserve">
    <value>全てのタスクを表示</value>
  </data>
</root>